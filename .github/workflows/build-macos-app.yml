name: Build macOS App

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Build macOS app
        run: |
          # Fix Tree import in spec file
          sed -i '' 's/a.datas += Tree/from PyInstaller.utils.hooks import collect_data_files\na.datas += collect_data_files/' app.spec
          
          # Build app
          pyinstaller app.spec
          
          # Make app executable
          chmod +x "dist/PDF Table Extractor.app/Contents/MacOS/PDF Table Extractor"
          
          # Create zip archive
          cd dist
          zip -r "../PDF_Table_Extractor.zip" "PDF Table Extractor.app"
          cd ..

      - name: Determine version
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "VERSION=v$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: PDF Table Extractor ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          files: |
            PDF_Table_Extractor.zip
            INSTALLATION_GUIDE.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 